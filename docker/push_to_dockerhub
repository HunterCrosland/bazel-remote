#!/bin/bash
set -euo pipefail

script_dir=$(dirname "${BASH_SOURCE[0]}")
cd "${script_dir}/.."

tag=latest
if [ $# = 1 ]
then
	case "$1" in
		v*)
			if [ "$(git rev-list -1 $1)" = "$(git rev-list -1 HEAD)" ]
			then
				tag="$1"
			else
				echo "Error: can only push \"latest\" or tagged commits"
				exit 1
			fi
			;;
		*)
			echo "Error: can only push \"latest\" or tagged commits"
			exit 1
			;;
	esac
fi

# push test-amd64 and test-arm64 images.
if [ "$(uname -p)" = aarch64 ]
then
	CC=clang-12 bazel run //:push_to_dockerhub_arm64
	exit 0
fi
bazel run //:push_to_dockerhub_amd64

# Create the multiarch manifest.
docker manifest rm hunchie/bazel-remote-cache:$tag || true
docker manifest create hunchie/bazel-remote-cache:$tag \
    --amend hunchie/bazel-remote-cache:tmp-amd64 #\
    #--amend hunchie/bazel-remote-cache:tmp-arm64

# Push the multiarch manifest
docker manifest push hunchie/bazel-remote-cache:$tag


echo "Go ahead and delete the tmp-amd64 and tmp-arm64 images from the web ui"
